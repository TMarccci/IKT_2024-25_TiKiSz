using Simulator_Lib;

// Szimul√°ci√≥ Param√©terei
int width = 20;
int height = 20;
int numberOfTurns = 10;
int numberOfSimulations = 3;
int rabbitCount = 14;
int foxCount = 8;
double? delay = 2; // seconds until next turn

// Nyulak tulajdons√°gainak be√°ll√≠t√°sa 
AnimalProperties rabbitProperties = new AnimalProperties
{
    MaxFullness = 5,
    ReproductionFullness = 3,
    HungerRate = 1,
    FoodValue = 1  // A f≈± t√°p√©rt√©ke
};

// R√≥k√°k tulajdons√°gainak be√°ll√≠t√°sa
AnimalProperties foxProperties = new AnimalProperties
{
    MaxFullness = 10,
    ReproductionFullness = 9,
    HungerRate = 2,
    FoodValue = 3  // A ny√∫l t√°p√©rt√©ke
};

// Eredm√©ny inicializ√°l√°sa
Result r = new Result();

// Szimul√°ci√≥k futtat√°sa
for (int i = 0; i < numberOfSimulations; i++)
{
    // R√°csrendszer inicializ√°l√°sa
    Grid grid = new Grid(width, height, rabbitProperties, foxProperties);

    // Popul√°ci√≥ inicializ√°l√°sa (p√©ld√°ul 5 ny√∫l √©s 1 r√≥ka)
    grid.PopulateGrid(rabbitCount, foxCount);
    
    // K√∂r√∂k l√©p√©se
    for (int turn = 1; turn <= numberOfTurns; turn++)
    {
        Console.Clear();
        Console.WriteLine($"Szimul√°ci√≥: {i+1}/{numberOfSimulations} - L√©p√©s: {turn}/{numberOfTurns}");
    
        // R√°cs megjelen√≠t√©se a konzolon
        DisplayGrid(grid);
    
        // ReSharper disable once ConditionIsAlwaysTrueOrFalse
        if (delay.HasValue)
        {
            Thread.Sleep((int)(delay.Value * 1000));
        }
        else
        {
            // V√°rakoz√°s a k√∂vetkez≈ë k√∂r el≈ëtt
            Console.ReadKey();
        }
    
        // Szimul√°ci√≥ k√∂vetkez≈ë k√∂r√©nek v√©grehajt√°sa
        grid.NextTurn();   
    }
    
    r.DetermineResult(grid);
}

Console.WriteLine(r.ToString());

// A r√°csrendszer megjelen√≠t√©se a konzolon
static void DisplayGrid(Grid grid)
{
    for (int y = 0; y < grid.Height; y++)
    {
        for (int x = 0; x < grid.Width; x++)
        {
            var cell = grid.GetCell(x, y);

            if (cell.Fox != null)
            {
                Console.Write("ü¶ä "); // R√≥ka
            }
            else if (cell.Rabbit != null)
            {
                Console.Write("üê∞ "); // Ny√∫l
            }
            else if (cell.Grass.State == Grass.GrassState.Mature)
            {
                Console.Write("üçÄ "); // Kifejlett f≈±
            }
            else if (cell.Grass.State == Grass.GrassState.Young)
            {
                Console.Write("‚òòÔ∏è "); // Zsenge f≈±
            }
            else
            {
                Console.Write("üå± "); // F≈±kezdem√©ny vagy √ºres mez≈ë
            }
        }
        Console.WriteLine();
    }
}
